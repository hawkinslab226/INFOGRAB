position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_point() + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_point() + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_point() + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_point() + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_point() + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_point() + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_point() + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_point() + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + 1
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_point() + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + 1
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_point() + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + 1
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_point() + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + 1
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_point() + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + 1
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_point() + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + 1
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_point() + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + 1
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_point() + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + 1
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_point() + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + 1
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + 1
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + 1
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + 1
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + 1
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + 1
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1, 0, 0.5)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1, 0, 0.5)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1, 0, 0.5)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1, 0, 0.5)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1, 0, 0.5)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1, 0, 0.5)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1, 0, 0.5)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1, 0, 0.5)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1, 0, 0.5)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1, 0, 0.5)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1, 0, 0.5)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_path()
library(ggplot2)
library(tibble)
position <- tibble(time = 0:1000, x = numeric(1001), y = numeric(1001))
position$x[1] <- 0
position$y[1] <- 0
for (i in 2:1001) {
position$x[i] <- position$x[i - 1] + rnorm(1, 0, 0.5)
position$y[i] <- position$y[i - 1] + rnorm(1)
}
print(position)
ggplot(data = position, aes(x = x, y = y, color = time)) + geom_path()
rm(list=ls(all=TRUE))
library(AlgDesign) # for gen.factorial()
rm(list=ls(all=TRUE))
library(AlgDesign) # for gen.factorial()
design = gen.factorial(2,4,varNames=c("A","B","C","D"), factors="all")
attach(design)
y = c(45,71,48,65,68,60,80,65,43,100,45,104,75,86,70,96) # example 6.2
cbind(design,y)
# Without any blocking (example 6.2), i.e. as if experiment was done in CRD.
contr = as.character("contr.helmert")
lm.1 = lm(y ~ A*B*C*D, contrasts = list(A=contr,B=contr,C=contr,D=contr))
eff = 2*lm.1$coef
eff = eff[2:length(eff)] # effects (exclude grand mean)
ss = summary.aov(lm.1) [[1]][ ,2] # and their SS
cbind(eff,ss)
L = as.factor((as.numeric(A) + as.numeric(B) + as.numeric(C) + as.numeric(D)) %% 2 )
mean(y[L==1]) - mean(y[L==0])
lm.2 = lm(y ~ L + A*B*C*D, contrasts = list(A=contr,B=contr,C=contr,D=contr,L=contr))
eff = 2*lm.2$coef
eff = eff[2:length(eff)]
ss = summary.aov(lm.2) [[1]][ ,2]
cbind(eff,ss)
L = as.factor((as.numeric(A) + as.numeric(B) + as.numeric(C) + as.numeric(D)) %% 2 )
mean(y[L==1]) - mean(y[L==0])
lm.2 = lm(y ~ L + A*B*C*D, contrasts = list(A=contr,B=contr,C=contr,D=contr,L=contr))
eff = 2*lm.2$coef
eff = eff[-1]
ss = summary.aov(lm.2) [[1]][ ,2]
cbind(eff,ss)
L = as.factor((as.numeric(A) + as.numeric(B) + as.numeric(C) + as.numeric(D)) %% 2 )
mean(y[L==1]) - mean(y[L==0])
lm.2 = lm(y ~ L + A*B*C*D, contrasts = list(A=contr,B=contr,C=contr,D=contr,L=contr))
eff = 2*lm.2$coef
eff = eff[2:length(eff)]
ss = summary.aov(lm.2) [[1]][ ,2]
cbind(eff,ss)
L = as.factor((as.numeric(A) + as.numeric(B) + as.numeric(C) + as.numeric(D)) %% 2 )
mean(y[L==1]) - mean(y[L==0])
lm.2 = lm(y ~ L + A*B*C*D, contrasts = list(A=contr,B=contr,C=contr,D=contr,L=contr))
eff = 2*lm.2$coef
eff = eff[-1]
ss = summary.aov(lm.2) [[1]][ ,2]
cbind(eff,ss)
L = as.factor((as.numeric(A) + as.numeric(B) + as.numeric(C) + as.numeric(D)) %% 2 )
mean(y[L==1]) - mean(y[L==0])
lm.2 = lm(y ~ L + A*B*C*D, contrasts = list(A=contr,B=contr,C=contr,D=contr,L=contr))
eff = 2*lm.2$coef
eff = eff[-1]
ss = summary.aov(lm.2)[[1]][ ,2]
cbind(eff,ss)
rm(list=ls(all=TRUE))
library(AlgDesign)
design = gen.factorial(2,4,varNames=c("A","B","C","D"), factors="all")
attach(design)
rm(list=ls(all=TRUE))
library(AlgDesign)
design = gen.factorial(2,4,varNames=c("A","B","C","D"), factors="all")
y = c(45,71,48,65,68,60,80,65,43,100,45,104,75,86,70,96)
cbind(design,y)
contr = as.character("contr.helmert")
lm.1 = lm(y ~ A*B*C*D, contrasts = list(A=contr,B=contr,C=contr,D=contr))
eff = 2*lm.1$coef
eff = eff[2:length(eff)]
ss = summary.aov(lm.1) [[1]][ ,2]
cbind(eff,ss)
L = as.factor((as.numeric(A) + as.numeric(B) + as.numeric(C) + as.numeric(D)) %% 2 )
mean(y[L==1]) - mean(y[L==0])
lm.2 = lm(y ~ L + A*B*C*D, contrasts = list(A=contr,B=contr,C=contr,D=contr,L=contr))
eff = 2*lm.2$coef
eff = eff[-1]
ss = summary.aov(lm.2)[[1]][ ,2]
cbind(eff,ss)
rm(list=ls(all=TRUE))
library(AlgDesign)
design = gen.factorial(2,4,varNames=c("A","B","C","D"), factors="all")
y = c(45,71,48,65,68,60,80,65,43,100,45,104,75,86,70,96)
cbind(design,y)
contr = as.character("contr.helmert")
lm.1 = lm(y ~ A*B*C*D, contrasts = list(A=contr,B=contr,C=contr,D=contr))
eff = 2*lm.1$coef
eff = eff[2:length(eff)]
ss = summary.aov(lm.1) [[1]][ ,2]
cbind(eff,ss)
L = as.factor((as.numeric(A) + as.numeric(B) + as.numeric(C) + as.numeric(D)) %% 2 )
mean(y[L==1]) - mean(y[L==0])
lm.2 = lm(y ~ L + A*B*C*D, contrasts = list(A=contr,B=contr,C=contr,D=contr,L=contr))
eff = 2*lm.2$coef
eff = eff[-1]
ss = summary.aov(lm.2)[[1]][ ,2]
cbind(eff,ss)
library(shiny); runApp('Documents/Internship/InfoGrab/INFO_GRAB.R')
runApp('Documents/Internship/InfoGrab/INFO_GRAB.R')
runApp('Documents/Internship/InfoGrab/INFO_GRAB.R')
runApp('Documents/Internship/InfoGrab/INFO_GRAB.R')
runApp('Documents/Internship/InfoGrab/INFO_GRAB.R')
runApp('Documents/Internship/InfoGrab/INFO_GRAB.R')
runApp('Documents/Internship/InfoGrab/INFO_GRAB.R')
runApp('Documents/Internship/InfoGrab/INFO_GRAB.R')
runApp('Documents/Internship/InfoGrab/INFO_GRAB.R')
runApp('Documents/Internship/InfoGrab/INFO_GRAB.R')
setwd("~/Documents/Internship")
# Install and load necessary packages
if (!requireNamespace("rentrez", quietly = TRUE)) install.packages("rentrez")
if (!requireNamespace("tidyverse", quietly = TRUE)) install.packages("tidyverse")
library(rentrez)
library(tidyverse)
# Step 1: Read your file containing gene names
file_path <- "browser_data/all.geneAse.info827.txt"
data <- read.table(file_path, header = TRUE, sep = "\t", stringsAsFactors = FALSE)
# Extract unique gene names
gene_names <- unique(data$Gene)
# Step 2: Query NCBI for gene coordinates in GCF_016699485.2
fetch_gene_coordinates <- function(gene_list) {
result <- data.frame()
for (gene in gene_list) {
# Search for gene data in NCBI (chicken, specific assembly)
search_result <- entrez_search(
db = "gene",
term = paste0(gene, "[Gene Name] AND Gallus gallus[Organism] AND GCF_016699485.2")
)
if (search_result$count > 0) {
# Fetch the summary of the gene
summary <- entrez_summary(db = "gene", id = search_result$ids[[1]])
result <- rbind(result, data.frame(
Gene = gene,
Chr = summary$chromosome,
Start = summary$genomicinfo[[1]]$chrstart,
End = summary$genomicinfo[[1]]$chrstop,
Strand = ifelse(summary$strand == 1, "+", "-")
))
}
}
return(result)
}
# Fetch coordinates
gene_coordinates <- fetch_gene_coordinates(gene_names)
unique(data$Tissue)
length(data$Tissue)
length(unique(data$Tissue))
runApp('Documents/Internship/InfoGrab/INFO_GRAB.R')
runApp('Documents/Internship/InfoGrab/INFO_GRAB.R')
runApp('Documents/Internship/InfoGrab/INFO_GRAB.R')
runApp('Documents/Internship/InfoGrab/INFO_GRAB.R')
runApp('Documents/Internship/InfoGrab/INFO_GRAB.R')
runApp('Documents/Internship/InfoGrab/INFO_GRAB.R')
